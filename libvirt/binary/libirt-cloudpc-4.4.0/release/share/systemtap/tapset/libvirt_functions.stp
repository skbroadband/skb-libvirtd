function libvirt_rpc_auth_name(type, verbose)
{
  if (type == 0) {
      typestr = "none"
  } else if (type == 1) {
      typestr = "sasl"
  } else if (type == 2) {
      typestr = "polkit"
  } else {
      typestr = "unknown";
      verbose = 1;
  }
  if (verbose) {
      typestr = typestr . sprintf(":%d", type)
  }
  return typestr;
}
function libvirt_rpc_type_name(type, verbose)
{
  if (type == 0) {
      typestr = "call"
  } else if (type == 1) {
      typestr = "reply"
  } else if (type == 2) {
      typestr = "message"
  } else if (type == 3) {
      typestr = "stream"
  } else if (type == 4) {
      typestr = "call_with_fds"
  } else if (type == 5) {
      typestr = "reply_with_fds"
  } else if (type == 6) {
      typestr = "stream_hole"
  } else {
      typestr = "unknown";
      verbose = 1;
  }
  if (verbose) {
      typestr = typestr . sprintf(":%d", type)
  }
  return typestr;
}
function libvirt_rpc_status_name(status, verbose)
{
  if (status == 0) {
      statusstr = "ok"
  } else if (status == 1) {
      statusstr = "error"
  } else if (status == 2) {
      statusstr = "continue"
  } else {
      statusstr = "unknown";
      verbose = 1;
  }
  if (verbose) {
      statusstr = statusstr . sprintf(":%d", status)
  }
  return statusstr;
}
function libvirt_rpc_program_name(program, verbose)
{
  if (program == 110102160) {
      programstr = "admin"
  } else if (program == 1801807216) {
      programstr = "keepalive"
  } else if (program == 245874415) {
      programstr = "lock_space"
  } else if (program == 425984) {
      programstr = "lxc"
  } else if (program == 305402420) {
      programstr = "lxc_monitor"
  } else if (program == 536903815) {
      programstr = "qemu"
  } else if (program == 536903814) {
      programstr = "remote"
  } else {
      programstr = "unknown";
      verbose = 1;
  }
  if (verbose) {
      programstr = programstr . sprintf(":%d", program)
  }
  return programstr;
}
function libvirt_rpc_procedure_name(program, version, proc, verbose)
{
  if (program == 110102160 && version == 1) {
      if (proc == 1) {
          procstr = "connect_open";
      } else if (proc == 2) {
          procstr = "connect_close";
      } else if (proc == 3) {
          procstr = "connect_get_lib_version";
      } else if (proc == 4) {
          procstr = "connect_list_servers";
      } else if (proc == 5) {
          procstr = "connect_lookup_server";
      } else if (proc == 6) {
          procstr = "server_get_threadpool_parameters";
      } else if (proc == 7) {
          procstr = "server_set_threadpool_parameters";
      } else if (proc == 8) {
          procstr = "server_list_clients";
      } else if (proc == 9) {
          procstr = "server_lookup_client";
      } else if (proc == 10) {
          procstr = "client_get_info";
      } else if (proc == 11) {
          procstr = "client_close";
      } else if (proc == 12) {
          procstr = "server_get_client_limits";
      } else if (proc == 13) {
          procstr = "server_set_client_limits";
      } else if (proc == 14) {
          procstr = "connect_get_logging_outputs";
      } else if (proc == 15) {
          procstr = "connect_get_logging_filters";
      } else if (proc == 16) {
          procstr = "connect_set_logging_outputs";
      } else if (proc == 17) {
          procstr = "connect_set_logging_filters";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else if (program == 1801807216 && version == 1) {
      if (proc == 1) {
          procstr = "ping";
      } else if (proc == 2) {
          procstr = "pong";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else if (program == 245874415 && version == 1) {
      if (proc == 1) {
          procstr = "register";
      } else if (proc == 2) {
          procstr = "restrict";
      } else if (proc == 3) {
          procstr = "new";
      } else if (proc == 4) {
          procstr = "create_resource";
      } else if (proc == 5) {
          procstr = "delete_resource";
      } else if (proc == 6) {
          procstr = "acquire_resource";
      } else if (proc == 7) {
          procstr = "release_resource";
      } else if (proc == 8) {
          procstr = "create_lockspace";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else if (program == 425984 && version == 1) {
      if (proc == 1) {
          procstr = "domain_open_namespace";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else if (program == 305402420 && version == 1) {
      if (proc == 1) {
          procstr = "exit_event";
      } else if (proc == 2) {
          procstr = "init_event";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else if (program == 536903815 && version == 1) {
      if (proc == 1) {
          procstr = "domain_monitor_command";
      } else if (proc == 2) {
          procstr = "domain_attach";
      } else if (proc == 3) {
          procstr = "domain_agent_command";
      } else if (proc == 4) {
          procstr = "connect_domain_monitor_event_register";
      } else if (proc == 5) {
          procstr = "connect_domain_monitor_event_deregister";
      } else if (proc == 6) {
          procstr = "domain_monitor_event";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else if (program == 536903814 && version == 1) {
      if (proc == 1) {
          procstr = "connect_open";
      } else if (proc == 2) {
          procstr = "connect_close";
      } else if (proc == 3) {
          procstr = "connect_get_type";
      } else if (proc == 4) {
          procstr = "connect_get_version";
      } else if (proc == 5) {
          procstr = "connect_get_max_vcpus";
      } else if (proc == 6) {
          procstr = "node_get_info";
      } else if (proc == 7) {
          procstr = "connect_get_capabilities";
      } else if (proc == 8) {
          procstr = "domain_attach_device";
      } else if (proc == 9) {
          procstr = "domain_create";
      } else if (proc == 10) {
          procstr = "domain_create_xml";
      } else if (proc == 11) {
          procstr = "domain_define_xml";
      } else if (proc == 12) {
          procstr = "domain_destroy";
      } else if (proc == 13) {
          procstr = "domain_detach_device";
      } else if (proc == 14) {
          procstr = "domain_get_xml_desc";
      } else if (proc == 15) {
          procstr = "domain_get_autostart";
      } else if (proc == 16) {
          procstr = "domain_get_info";
      } else if (proc == 17) {
          procstr = "domain_get_max_memory";
      } else if (proc == 18) {
          procstr = "domain_get_max_vcpus";
      } else if (proc == 19) {
          procstr = "domain_get_os_type";
      } else if (proc == 20) {
          procstr = "domain_get_vcpus";
      } else if (proc == 21) {
          procstr = "connect_list_defined_domains";
      } else if (proc == 22) {
          procstr = "domain_lookup_by_id";
      } else if (proc == 23) {
          procstr = "domain_lookup_by_name";
      } else if (proc == 24) {
          procstr = "domain_lookup_by_uuid";
      } else if (proc == 25) {
          procstr = "connect_num_of_defined_domains";
      } else if (proc == 26) {
          procstr = "domain_pin_vcpu";
      } else if (proc == 27) {
          procstr = "domain_reboot";
      } else if (proc == 28) {
          procstr = "domain_resume";
      } else if (proc == 29) {
          procstr = "domain_set_autostart";
      } else if (proc == 30) {
          procstr = "domain_set_max_memory";
      } else if (proc == 31) {
          procstr = "domain_set_memory";
      } else if (proc == 32) {
          procstr = "domain_set_vcpus";
      } else if (proc == 33) {
          procstr = "domain_shutdown";
      } else if (proc == 34) {
          procstr = "domain_suspend";
      } else if (proc == 35) {
          procstr = "domain_undefine";
      } else if (proc == 36) {
          procstr = "connect_list_defined_networks";
      } else if (proc == 37) {
          procstr = "connect_list_domains";
      } else if (proc == 38) {
          procstr = "connect_list_networks";
      } else if (proc == 39) {
          procstr = "network_create";
      } else if (proc == 40) {
          procstr = "network_create_xml";
      } else if (proc == 41) {
          procstr = "network_define_xml";
      } else if (proc == 42) {
          procstr = "network_destroy";
      } else if (proc == 43) {
          procstr = "network_get_xml_desc";
      } else if (proc == 44) {
          procstr = "network_get_autostart";
      } else if (proc == 45) {
          procstr = "network_get_bridge_name";
      } else if (proc == 46) {
          procstr = "network_lookup_by_name";
      } else if (proc == 47) {
          procstr = "network_lookup_by_uuid";
      } else if (proc == 48) {
          procstr = "network_set_autostart";
      } else if (proc == 49) {
          procstr = "network_undefine";
      } else if (proc == 50) {
          procstr = "connect_num_of_defined_networks";
      } else if (proc == 51) {
          procstr = "connect_num_of_domains";
      } else if (proc == 52) {
          procstr = "connect_num_of_networks";
      } else if (proc == 53) {
          procstr = "domain_core_dump";
      } else if (proc == 54) {
          procstr = "domain_restore";
      } else if (proc == 55) {
          procstr = "domain_save";
      } else if (proc == 56) {
          procstr = "domain_get_scheduler_type";
      } else if (proc == 57) {
          procstr = "domain_get_scheduler_parameters";
      } else if (proc == 58) {
          procstr = "domain_set_scheduler_parameters";
      } else if (proc == 59) {
          procstr = "connect_get_hostname";
      } else if (proc == 60) {
          procstr = "connect_supports_feature";
      } else if (proc == 61) {
          procstr = "domain_migrate_prepare";
      } else if (proc == 62) {
          procstr = "domain_migrate_perform";
      } else if (proc == 63) {
          procstr = "domain_migrate_finish";
      } else if (proc == 64) {
          procstr = "domain_block_stats";
      } else if (proc == 65) {
          procstr = "domain_interface_stats";
      } else if (proc == 66) {
          procstr = "auth_list";
      } else if (proc == 67) {
          procstr = "auth_sasl_init";
      } else if (proc == 68) {
          procstr = "auth_sasl_start";
      } else if (proc == 69) {
          procstr = "auth_sasl_step";
      } else if (proc == 70) {
          procstr = "auth_polkit";
      } else if (proc == 71) {
          procstr = "connect_num_of_storage_pools";
      } else if (proc == 72) {
          procstr = "connect_list_storage_pools";
      } else if (proc == 73) {
          procstr = "connect_num_of_defined_storage_pools";
      } else if (proc == 74) {
          procstr = "connect_list_defined_storage_pools";
      } else if (proc == 75) {
          procstr = "connect_find_storage_pool_sources";
      } else if (proc == 76) {
          procstr = "storage_pool_create_xml";
      } else if (proc == 77) {
          procstr = "storage_pool_define_xml";
      } else if (proc == 78) {
          procstr = "storage_pool_create";
      } else if (proc == 79) {
          procstr = "storage_pool_build";
      } else if (proc == 80) {
          procstr = "storage_pool_destroy";
      } else if (proc == 81) {
          procstr = "storage_pool_delete";
      } else if (proc == 82) {
          procstr = "storage_pool_undefine";
      } else if (proc == 83) {
          procstr = "storage_pool_refresh";
      } else if (proc == 84) {
          procstr = "storage_pool_lookup_by_name";
      } else if (proc == 85) {
          procstr = "storage_pool_lookup_by_uuid";
      } else if (proc == 86) {
          procstr = "storage_pool_lookup_by_volume";
      } else if (proc == 87) {
          procstr = "storage_pool_get_info";
      } else if (proc == 88) {
          procstr = "storage_pool_get_xml_desc";
      } else if (proc == 89) {
          procstr = "storage_pool_get_autostart";
      } else if (proc == 90) {
          procstr = "storage_pool_set_autostart";
      } else if (proc == 91) {
          procstr = "storage_pool_num_of_volumes";
      } else if (proc == 92) {
          procstr = "storage_pool_list_volumes";
      } else if (proc == 93) {
          procstr = "storage_vol_create_xml";
      } else if (proc == 94) {
          procstr = "storage_vol_delete";
      } else if (proc == 95) {
          procstr = "storage_vol_lookup_by_name";
      } else if (proc == 96) {
          procstr = "storage_vol_lookup_by_key";
      } else if (proc == 97) {
          procstr = "storage_vol_lookup_by_path";
      } else if (proc == 98) {
          procstr = "storage_vol_get_info";
      } else if (proc == 99) {
          procstr = "storage_vol_get_xml_desc";
      } else if (proc == 100) {
          procstr = "storage_vol_get_path";
      } else if (proc == 101) {
          procstr = "node_get_cells_free_memory";
      } else if (proc == 102) {
          procstr = "node_get_free_memory";
      } else if (proc == 103) {
          procstr = "domain_block_peek";
      } else if (proc == 104) {
          procstr = "domain_memory_peek";
      } else if (proc == 105) {
          procstr = "connect_domain_event_register";
      } else if (proc == 106) {
          procstr = "connect_domain_event_deregister";
      } else if (proc == 107) {
          procstr = "domain_event_lifecycle";
      } else if (proc == 108) {
          procstr = "domain_migrate_prepare2";
      } else if (proc == 109) {
          procstr = "domain_migrate_finish2";
      } else if (proc == 110) {
          procstr = "connect_get_uri";
      } else if (proc == 111) {
          procstr = "node_num_of_devices";
      } else if (proc == 112) {
          procstr = "node_list_devices";
      } else if (proc == 113) {
          procstr = "node_device_lookup_by_name";
      } else if (proc == 114) {
          procstr = "node_device_get_xml_desc";
      } else if (proc == 115) {
          procstr = "node_device_get_parent";
      } else if (proc == 116) {
          procstr = "node_device_num_of_caps";
      } else if (proc == 117) {
          procstr = "node_device_list_caps";
      } else if (proc == 118) {
          procstr = "node_device_dettach";
      } else if (proc == 119) {
          procstr = "node_device_re_attach";
      } else if (proc == 120) {
          procstr = "node_device_reset";
      } else if (proc == 121) {
          procstr = "domain_get_security_label";
      } else if (proc == 122) {
          procstr = "node_get_security_model";
      } else if (proc == 123) {
          procstr = "node_device_create_xml";
      } else if (proc == 124) {
          procstr = "node_device_destroy";
      } else if (proc == 125) {
          procstr = "storage_vol_create_xml_from";
      } else if (proc == 126) {
          procstr = "connect_num_of_interfaces";
      } else if (proc == 127) {
          procstr = "connect_list_interfaces";
      } else if (proc == 128) {
          procstr = "interface_lookup_by_name";
      } else if (proc == 129) {
          procstr = "interface_lookup_by_mac_string";
      } else if (proc == 130) {
          procstr = "interface_get_xml_desc";
      } else if (proc == 131) {
          procstr = "interface_define_xml";
      } else if (proc == 132) {
          procstr = "interface_undefine";
      } else if (proc == 133) {
          procstr = "interface_create";
      } else if (proc == 134) {
          procstr = "interface_destroy";
      } else if (proc == 135) {
          procstr = "connect_domain_xml_from_native";
      } else if (proc == 136) {
          procstr = "connect_domain_xml_to_native";
      } else if (proc == 137) {
          procstr = "connect_num_of_defined_interfaces";
      } else if (proc == 138) {
          procstr = "connect_list_defined_interfaces";
      } else if (proc == 139) {
          procstr = "connect_num_of_secrets";
      } else if (proc == 140) {
          procstr = "connect_list_secrets";
      } else if (proc == 141) {
          procstr = "secret_lookup_by_uuid";
      } else if (proc == 142) {
          procstr = "secret_define_xml";
      } else if (proc == 143) {
          procstr = "secret_get_xml_desc";
      } else if (proc == 144) {
          procstr = "secret_set_value";
      } else if (proc == 145) {
          procstr = "secret_get_value";
      } else if (proc == 146) {
          procstr = "secret_undefine";
      } else if (proc == 147) {
          procstr = "secret_lookup_by_usage";
      } else if (proc == 148) {
          procstr = "domain_migrate_prepare_tunnel";
      } else if (proc == 149) {
          procstr = "connect_is_secure";
      } else if (proc == 150) {
          procstr = "domain_is_active";
      } else if (proc == 151) {
          procstr = "domain_is_persistent";
      } else if (proc == 152) {
          procstr = "network_is_active";
      } else if (proc == 153) {
          procstr = "network_is_persistent";
      } else if (proc == 154) {
          procstr = "storage_pool_is_active";
      } else if (proc == 155) {
          procstr = "storage_pool_is_persistent";
      } else if (proc == 156) {
          procstr = "interface_is_active";
      } else if (proc == 157) {
          procstr = "connect_get_lib_version";
      } else if (proc == 158) {
          procstr = "connect_compare_cpu";
      } else if (proc == 159) {
          procstr = "domain_memory_stats";
      } else if (proc == 160) {
          procstr = "domain_attach_device_flags";
      } else if (proc == 161) {
          procstr = "domain_detach_device_flags";
      } else if (proc == 162) {
          procstr = "connect_baseline_cpu";
      } else if (proc == 163) {
          procstr = "domain_get_job_info";
      } else if (proc == 164) {
          procstr = "domain_abort_job";
      } else if (proc == 165) {
          procstr = "storage_vol_wipe";
      } else if (proc == 166) {
          procstr = "domain_migrate_set_max_downtime";
      } else if (proc == 167) {
          procstr = "connect_domain_event_register_any";
      } else if (proc == 168) {
          procstr = "connect_domain_event_deregister_any";
      } else if (proc == 169) {
          procstr = "domain_event_reboot";
      } else if (proc == 170) {
          procstr = "domain_event_rtc_change";
      } else if (proc == 171) {
          procstr = "domain_event_watchdog";
      } else if (proc == 172) {
          procstr = "domain_event_io_error";
      } else if (proc == 173) {
          procstr = "domain_event_graphics";
      } else if (proc == 174) {
          procstr = "domain_update_device_flags";
      } else if (proc == 175) {
          procstr = "nwfilter_lookup_by_name";
      } else if (proc == 176) {
          procstr = "nwfilter_lookup_by_uuid";
      } else if (proc == 177) {
          procstr = "nwfilter_get_xml_desc";
      } else if (proc == 178) {
          procstr = "connect_num_of_nwfilters";
      } else if (proc == 179) {
          procstr = "connect_list_nwfilters";
      } else if (proc == 180) {
          procstr = "nwfilter_define_xml";
      } else if (proc == 181) {
          procstr = "nwfilter_undefine";
      } else if (proc == 182) {
          procstr = "domain_managed_save";
      } else if (proc == 183) {
          procstr = "domain_has_managed_save_image";
      } else if (proc == 184) {
          procstr = "domain_managed_save_remove";
      } else if (proc == 185) {
          procstr = "domain_snapshot_create_xml";
      } else if (proc == 186) {
          procstr = "domain_snapshot_get_xml_desc";
      } else if (proc == 187) {
          procstr = "domain_snapshot_num";
      } else if (proc == 188) {
          procstr = "domain_snapshot_list_names";
      } else if (proc == 189) {
          procstr = "domain_snapshot_lookup_by_name";
      } else if (proc == 190) {
          procstr = "domain_has_current_snapshot";
      } else if (proc == 191) {
          procstr = "domain_snapshot_current";
      } else if (proc == 192) {
          procstr = "domain_revert_to_snapshot";
      } else if (proc == 193) {
          procstr = "domain_snapshot_delete";
      } else if (proc == 194) {
          procstr = "domain_get_block_info";
      } else if (proc == 195) {
          procstr = "domain_event_io_error_reason";
      } else if (proc == 196) {
          procstr = "domain_create_with_flags";
      } else if (proc == 197) {
          procstr = "domain_set_memory_parameters";
      } else if (proc == 198) {
          procstr = "domain_get_memory_parameters";
      } else if (proc == 199) {
          procstr = "domain_set_vcpus_flags";
      } else if (proc == 200) {
          procstr = "domain_get_vcpus_flags";
      } else if (proc == 201) {
          procstr = "domain_open_console";
      } else if (proc == 202) {
          procstr = "domain_is_updated";
      } else if (proc == 203) {
          procstr = "connect_get_sysinfo";
      } else if (proc == 204) {
          procstr = "domain_set_memory_flags";
      } else if (proc == 205) {
          procstr = "domain_set_blkio_parameters";
      } else if (proc == 206) {
          procstr = "domain_get_blkio_parameters";
      } else if (proc == 207) {
          procstr = "domain_migrate_set_max_speed";
      } else if (proc == 208) {
          procstr = "storage_vol_upload";
      } else if (proc == 209) {
          procstr = "storage_vol_download";
      } else if (proc == 210) {
          procstr = "domain_inject_nmi";
      } else if (proc == 211) {
          procstr = "domain_screenshot";
      } else if (proc == 212) {
          procstr = "domain_get_state";
      } else if (proc == 213) {
          procstr = "domain_migrate_begin3";
      } else if (proc == 214) {
          procstr = "domain_migrate_prepare3";
      } else if (proc == 215) {
          procstr = "domain_migrate_prepare_tunnel3";
      } else if (proc == 216) {
          procstr = "domain_migrate_perform3";
      } else if (proc == 217) {
          procstr = "domain_migrate_finish3";
      } else if (proc == 218) {
          procstr = "domain_migrate_confirm3";
      } else if (proc == 219) {
          procstr = "domain_set_scheduler_parameters_flags";
      } else if (proc == 220) {
          procstr = "interface_change_begin";
      } else if (proc == 221) {
          procstr = "interface_change_commit";
      } else if (proc == 222) {
          procstr = "interface_change_rollback";
      } else if (proc == 223) {
          procstr = "domain_get_scheduler_parameters_flags";
      } else if (proc == 224) {
          procstr = "domain_event_control_error";
      } else if (proc == 225) {
          procstr = "domain_pin_vcpu_flags";
      } else if (proc == 226) {
          procstr = "domain_send_key";
      } else if (proc == 227) {
          procstr = "node_get_cpu_stats";
      } else if (proc == 228) {
          procstr = "node_get_memory_stats";
      } else if (proc == 229) {
          procstr = "domain_get_control_info";
      } else if (proc == 230) {
          procstr = "domain_get_vcpu_pin_info";
      } else if (proc == 231) {
          procstr = "domain_undefine_flags";
      } else if (proc == 232) {
          procstr = "domain_save_flags";
      } else if (proc == 233) {
          procstr = "domain_restore_flags";
      } else if (proc == 234) {
          procstr = "domain_destroy_flags";
      } else if (proc == 235) {
          procstr = "domain_save_image_get_xml_desc";
      } else if (proc == 236) {
          procstr = "domain_save_image_define_xml";
      } else if (proc == 237) {
          procstr = "domain_block_job_abort";
      } else if (proc == 238) {
          procstr = "domain_get_block_job_info";
      } else if (proc == 239) {
          procstr = "domain_block_job_set_speed";
      } else if (proc == 240) {
          procstr = "domain_block_pull";
      } else if (proc == 241) {
          procstr = "domain_event_block_job";
      } else if (proc == 242) {
          procstr = "domain_migrate_get_max_speed";
      } else if (proc == 243) {
          procstr = "domain_block_stats_flags";
      } else if (proc == 244) {
          procstr = "domain_snapshot_get_parent";
      } else if (proc == 245) {
          procstr = "domain_reset";
      } else if (proc == 246) {
          procstr = "domain_snapshot_num_children";
      } else if (proc == 247) {
          procstr = "domain_snapshot_list_children_names";
      } else if (proc == 248) {
          procstr = "domain_event_disk_change";
      } else if (proc == 249) {
          procstr = "domain_open_graphics";
      } else if (proc == 250) {
          procstr = "node_suspend_for_duration";
      } else if (proc == 251) {
          procstr = "domain_block_resize";
      } else if (proc == 252) {
          procstr = "domain_set_block_io_tune";
      } else if (proc == 253) {
          procstr = "domain_get_block_io_tune";
      } else if (proc == 254) {
          procstr = "domain_set_numa_parameters";
      } else if (proc == 255) {
          procstr = "domain_get_numa_parameters";
      } else if (proc == 256) {
          procstr = "domain_set_interface_parameters";
      } else if (proc == 257) {
          procstr = "domain_get_interface_parameters";
      } else if (proc == 258) {
          procstr = "domain_shutdown_flags";
      } else if (proc == 259) {
          procstr = "storage_vol_wipe_pattern";
      } else if (proc == 260) {
          procstr = "storage_vol_resize";
      } else if (proc == 261) {
          procstr = "domain_pm_suspend_for_duration";
      } else if (proc == 262) {
          procstr = "domain_get_cpu_stats";
      } else if (proc == 263) {
          procstr = "domain_get_disk_errors";
      } else if (proc == 264) {
          procstr = "domain_set_metadata";
      } else if (proc == 265) {
          procstr = "domain_get_metadata";
      } else if (proc == 266) {
          procstr = "domain_block_rebase";
      } else if (proc == 267) {
          procstr = "domain_pm_wakeup";
      } else if (proc == 268) {
          procstr = "domain_event_tray_change";
      } else if (proc == 269) {
          procstr = "domain_event_pmwakeup";
      } else if (proc == 270) {
          procstr = "domain_event_pmsuspend";
      } else if (proc == 271) {
          procstr = "domain_snapshot_is_current";
      } else if (proc == 272) {
          procstr = "domain_snapshot_has_metadata";
      } else if (proc == 273) {
          procstr = "connect_list_all_domains";
      } else if (proc == 274) {
          procstr = "domain_list_all_snapshots";
      } else if (proc == 275) {
          procstr = "domain_snapshot_list_all_children";
      } else if (proc == 276) {
          procstr = "domain_event_balloon_change";
      } else if (proc == 277) {
          procstr = "domain_get_hostname";
      } else if (proc == 278) {
          procstr = "domain_get_security_label_list";
      } else if (proc == 279) {
          procstr = "domain_pin_emulator";
      } else if (proc == 280) {
          procstr = "domain_get_emulator_pin_info";
      } else if (proc == 281) {
          procstr = "connect_list_all_storage_pools";
      } else if (proc == 282) {
          procstr = "storage_pool_list_all_volumes";
      } else if (proc == 283) {
          procstr = "connect_list_all_networks";
      } else if (proc == 284) {
          procstr = "connect_list_all_interfaces";
      } else if (proc == 285) {
          procstr = "connect_list_all_node_devices";
      } else if (proc == 286) {
          procstr = "connect_list_all_nwfilters";
      } else if (proc == 287) {
          procstr = "connect_list_all_secrets";
      } else if (proc == 288) {
          procstr = "node_set_memory_parameters";
      } else if (proc == 289) {
          procstr = "node_get_memory_parameters";
      } else if (proc == 290) {
          procstr = "domain_block_commit";
      } else if (proc == 291) {
          procstr = "network_update";
      } else if (proc == 292) {
          procstr = "domain_event_pmsuspend_disk";
      } else if (proc == 293) {
          procstr = "node_get_cpu_map";
      } else if (proc == 294) {
          procstr = "domain_fstrim";
      } else if (proc == 295) {
          procstr = "domain_send_process_signal";
      } else if (proc == 296) {
          procstr = "domain_open_channel";
      } else if (proc == 297) {
          procstr = "node_device_lookup_scsi_host_by_wwn";
      } else if (proc == 298) {
          procstr = "domain_get_job_stats";
      } else if (proc == 299) {
          procstr = "domain_migrate_get_compression_cache";
      } else if (proc == 300) {
          procstr = "domain_migrate_set_compression_cache";
      } else if (proc == 301) {
          procstr = "node_device_detach_flags";
      } else if (proc == 302) {
          procstr = "domain_migrate_begin3_params";
      } else if (proc == 303) {
          procstr = "domain_migrate_prepare3_params";
      } else if (proc == 304) {
          procstr = "domain_migrate_prepare_tunnel3_params";
      } else if (proc == 305) {
          procstr = "domain_migrate_perform3_params";
      } else if (proc == 306) {
          procstr = "domain_migrate_finish3_params";
      } else if (proc == 307) {
          procstr = "domain_migrate_confirm3_params";
      } else if (proc == 308) {
          procstr = "domain_set_memory_stats_period";
      } else if (proc == 309) {
          procstr = "domain_create_xml_with_files";
      } else if (proc == 310) {
          procstr = "domain_create_with_files";
      } else if (proc == 311) {
          procstr = "domain_event_device_removed";
      } else if (proc == 312) {
          procstr = "connect_get_cpu_model_names";
      } else if (proc == 313) {
          procstr = "connect_network_event_register_any";
      } else if (proc == 314) {
          procstr = "connect_network_event_deregister_any";
      } else if (proc == 315) {
          procstr = "network_event_lifecycle";
      } else if (proc == 316) {
          procstr = "connect_domain_event_callback_register_any";
      } else if (proc == 317) {
          procstr = "connect_domain_event_callback_deregister_any";
      } else if (proc == 318) {
          procstr = "domain_event_callback_lifecycle";
      } else if (proc == 319) {
          procstr = "domain_event_callback_reboot";
      } else if (proc == 320) {
          procstr = "domain_event_callback_rtc_change";
      } else if (proc == 321) {
          procstr = "domain_event_callback_watchdog";
      } else if (proc == 322) {
          procstr = "domain_event_callback_io_error";
      } else if (proc == 323) {
          procstr = "domain_event_callback_graphics";
      } else if (proc == 324) {
          procstr = "domain_event_callback_io_error_reason";
      } else if (proc == 325) {
          procstr = "domain_event_callback_control_error";
      } else if (proc == 326) {
          procstr = "domain_event_callback_block_job";
      } else if (proc == 327) {
          procstr = "domain_event_callback_disk_change";
      } else if (proc == 328) {
          procstr = "domain_event_callback_tray_change";
      } else if (proc == 329) {
          procstr = "domain_event_callback_pmwakeup";
      } else if (proc == 330) {
          procstr = "domain_event_callback_pmsuspend";
      } else if (proc == 331) {
          procstr = "domain_event_callback_balloon_change";
      } else if (proc == 332) {
          procstr = "domain_event_callback_pmsuspend_disk";
      } else if (proc == 333) {
          procstr = "domain_event_callback_device_removed";
      } else if (proc == 334) {
          procstr = "domain_core_dump_with_format";
      } else if (proc == 335) {
          procstr = "domain_fsfreeze";
      } else if (proc == 336) {
          procstr = "domain_fsthaw";
      } else if (proc == 337) {
          procstr = "domain_get_time";
      } else if (proc == 338) {
          procstr = "domain_set_time";
      } else if (proc == 339) {
          procstr = "domain_event_block_job_2";
      } else if (proc == 340) {
          procstr = "node_get_free_pages";
      } else if (proc == 341) {
          procstr = "network_get_dhcp_leases";
      } else if (proc == 342) {
          procstr = "connect_get_domain_capabilities";
      } else if (proc == 343) {
          procstr = "domain_open_graphics_fd";
      } else if (proc == 344) {
          procstr = "connect_get_all_domain_stats";
      } else if (proc == 345) {
          procstr = "domain_block_copy";
      } else if (proc == 346) {
          procstr = "domain_event_callback_tunable";
      } else if (proc == 347) {
          procstr = "node_alloc_pages";
      } else if (proc == 348) {
          procstr = "domain_event_callback_agent_lifecycle";
      } else if (proc == 349) {
          procstr = "domain_get_fsinfo";
      } else if (proc == 350) {
          procstr = "domain_define_xml_flags";
      } else if (proc == 351) {
          procstr = "domain_get_iothread_info";
      } else if (proc == 352) {
          procstr = "domain_pin_iothread";
      } else if (proc == 353) {
          procstr = "domain_interface_addresses";
      } else if (proc == 354) {
          procstr = "domain_event_callback_device_added";
      } else if (proc == 355) {
          procstr = "domain_add_iothread";
      } else if (proc == 356) {
          procstr = "domain_del_iothread";
      } else if (proc == 357) {
          procstr = "domain_set_user_password";
      } else if (proc == 358) {
          procstr = "domain_rename";
      } else if (proc == 359) {
          procstr = "domain_event_callback_migration_iteration";
      } else if (proc == 360) {
          procstr = "connect_register_close_callback";
      } else if (proc == 361) {
          procstr = "connect_unregister_close_callback";
      } else if (proc == 362) {
          procstr = "connect_event_connection_closed";
      } else if (proc == 363) {
          procstr = "domain_event_callback_job_completed";
      } else if (proc == 364) {
          procstr = "domain_migrate_start_post_copy";
      } else if (proc == 365) {
          procstr = "domain_get_perf_events";
      } else if (proc == 366) {
          procstr = "domain_set_perf_events";
      } else if (proc == 367) {
          procstr = "domain_event_callback_device_removal_failed";
      } else if (proc == 368) {
          procstr = "connect_storage_pool_event_register_any";
      } else if (proc == 369) {
          procstr = "connect_storage_pool_event_deregister_any";
      } else if (proc == 370) {
          procstr = "storage_pool_event_lifecycle";
      } else if (proc == 371) {
          procstr = "domain_get_guest_vcpus";
      } else if (proc == 372) {
          procstr = "domain_set_guest_vcpus";
      } else if (proc == 373) {
          procstr = "storage_pool_event_refresh";
      } else if (proc == 374) {
          procstr = "connect_node_device_event_register_any";
      } else if (proc == 375) {
          procstr = "connect_node_device_event_deregister_any";
      } else if (proc == 376) {
          procstr = "node_device_event_lifecycle";
      } else if (proc == 377) {
          procstr = "node_device_event_update";
      } else if (proc == 378) {
          procstr = "storage_vol_get_info_flags";
      } else if (proc == 379) {
          procstr = "domain_event_callback_metadata_change";
      } else if (proc == 380) {
          procstr = "connect_secret_event_register_any";
      } else if (proc == 381) {
          procstr = "connect_secret_event_deregister_any";
      } else if (proc == 382) {
          procstr = "secret_event_lifecycle";
      } else if (proc == 383) {
          procstr = "secret_event_value_changed";
      } else if (proc == 384) {
          procstr = "domain_set_vcpu";
      } else if (proc == 385) {
          procstr = "domain_event_block_threshold";
      } else if (proc == 386) {
          procstr = "domain_set_block_threshold";
      } else if (proc == 387) {
          procstr = "domain_migrate_get_max_downtime";
      } else if (proc == 388) {
          procstr = "domain_managed_save_get_xml_desc";
      } else if (proc == 389) {
          procstr = "domain_managed_save_define_xml";
      } else if (proc == 390) {
          procstr = "domain_set_lifecycle_action";
      } else if (proc == 391) {
          procstr = "storage_pool_lookup_by_target_path";
      } else if (proc == 392) {
          procstr = "domain_detach_device_alias";
      } else if (proc == 393) {
          procstr = "connect_compare_hypervisor_cpu";
      } else if (proc == 394) {
          procstr = "connect_baseline_hypervisor_cpu";
      } else {
          procstr = "unknown";
          verbose = 1;
      }
  } else {
      procstr = "unknown";
      verbose = 1;
  }
  if (verbose) {
      procstr = procstr . sprintf(":%d", proc)
  }
  return procstr;
}
